#!/bin/bash
# Pandoc JSX technique: nbconvert → pandoc with JSX syntax → clean MDX

set -e

NOTEBOOK_SOURCE="/Users/rob/repos/pixeltable/docs/notebooks"
DOCS_OUTPUT="/Users/rob/repos/pixeltable/docs3/docs/examples"

echo "🔧 Pandoc JSX Technique Converter"
echo "📂 Source: $NOTEBOOK_SOURCE"
echo "📂 Output: $DOCS_OUTPUT (flat)"
echo ""

# Check dependencies
if ! command -v jupyter &> /dev/null; then
    echo "❌ jupyter not found"
    exit 1
fi

if ! command -v pandoc &> /dev/null; then
    echo "❌ pandoc not found"
    exit 1
fi

echo "✅ jupyter found: $(jupyter --version | head -1)"
echo "✅ pandoc found: $(pandoc --version | head -1)"
echo ""

# Create output directory
mkdir -p "$DOCS_OUTPUT"

# Function to convert with nbconvert → pandoc JSX
pandoc_jsx_convert() {
    local notebook_path="$1"
    local notebook_name=$(basename "$notebook_path" .ipynb)
    local temp_dir="/tmp/notebook_conversion_$$"
    
    echo "  🔄 Converting: $notebook_name"
    
    # Create temp directory
    mkdir -p "$temp_dir"
    
    # Step 1: nbconvert to markdown
    jupyter nbconvert --to markdown --no-input --output-dir="$temp_dir" "$notebook_path" || {
        echo "  ❌ nbconvert failed for $notebook_name"
        rm -rf "$temp_dir"
        return 1
    }
    
    local md_file="$temp_dir/$notebook_name.md"
    local mdx_file="$DOCS_OUTPUT/$notebook_name.mdx"
    
    if [ -f "$md_file" ]; then
        # Step 2: Use pandoc with JSX syntax (if available)
        # Note: We'll try with and without JSX syntax definition
        
        echo "    📝 Processing with pandoc..."
        
        # Try pandoc conversion (basic approach first)
        pandoc "$md_file" \
            --from markdown \
            --to markdown \
            --output "$temp_dir/processed.md" || {
            echo "  ❌ pandoc failed for $notebook_name"
            rm -rf "$temp_dir"
            return 1
        }
        
        # Step 3: Add frontmatter and create final MDX
        {
            echo "---"
            echo "title: \"$(echo "$notebook_name" | sed 's/-/ /g' | sed 's/\b\w/\U&/g')\""
            echo "description: \"Jupyter notebook example for Pixeltable\""
            echo "---"
            echo ""
            cat "$temp_dir/processed.md"
        } > "$mdx_file"
        
        echo "  ✅ Created: $notebook_name.mdx"
        
        # Show file size
        local file_size=$(wc -c < "$mdx_file")
        echo "     Size: $(($file_size / 1024))KB"
        
    else
        echo "  ❌ No markdown file generated by nbconvert"
    fi
    
    # Cleanup
    rm -rf "$temp_dir"
}

echo "🔍 Finding all notebooks and converting with pandoc JSX technique..."

# Find all .ipynb files recursively and convert them
find "$NOTEBOOK_SOURCE" -name "*.ipynb" -type f | while read notebook; do
    pandoc_jsx_convert "$notebook"
done

echo ""
echo "📊 PANDOC JSX CONVERSION COMPLETE!"
echo ""

# Show results
echo "📁 All converted files:"
find "$DOCS_OUTPUT" -name "*.mdx" -exec ls -lh {} \; | sort

total_files=$(find "$DOCS_OUTPUT" -name "*.mdx" | wc -l)
echo ""
echo "✅ Total converted: $total_files notebooks"
echo "🔧 Used: nbconvert → pandoc → MDX pipeline"
echo ""
echo "🚀 If this works better, we can enhance with --syntax-definition=jsx.xml"
